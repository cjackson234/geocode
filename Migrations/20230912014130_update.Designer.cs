// <auto-generated />
using System;
using Geocode.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Geocode.Migrations
{
    [DbContext(typeof(GeoDataContext))]
    [Migration("20230912014130_update")]
    partial class update
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Geocode.Models.CountyFipsData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CountyFips")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GeoDataId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GeoDataId");

                    b.ToTable("CountyFipsData");
                });

            modelBuilder.Entity("Geocode.Models.CountyNames", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CountyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GeoDataId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GeoDataId");

                    b.ToTable("CountyNames");
                });

            modelBuilder.Entity("Geocode.Models.GeoData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountyFips")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountyWeights")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Density")
                        .HasColumnType("float");

                    b.Property<bool>("Imprecise")
                        .HasColumnType("bit");

                    b.Property<double>("Lat")
                        .HasColumnType("float");

                    b.Property<double>("Lng")
                        .HasColumnType("float");

                    b.Property<bool>("Military")
                        .HasColumnType("bit");

                    b.Property<string>("ParentZcta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Population")
                        .HasColumnType("int");

                    b.Property<string>("StateId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StateName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Timezone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zcta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Zip")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("GeoData");
                });

            modelBuilder.Entity("Geocode.Models.CountyFipsData", b =>
                {
                    b.HasOne("Geocode.Models.GeoData", null)
                        .WithMany("CountyFipsData")
                        .HasForeignKey("GeoDataId");
                });

            modelBuilder.Entity("Geocode.Models.CountyNames", b =>
                {
                    b.HasOne("Geocode.Models.GeoData", null)
                        .WithMany("CountyNames")
                        .HasForeignKey("GeoDataId");
                });

            modelBuilder.Entity("Geocode.Models.GeoData", b =>
                {
                    b.Navigation("CountyFipsData");

                    b.Navigation("CountyNames");
                });
#pragma warning restore 612, 618
        }
    }
}
